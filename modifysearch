<div class="searchable-select-wrapper">
  <select id="jiraAssignedFilterOpen" class="form-select" onchange="renderTableOpen(currentPageOpen)">
    <option value="">Filter by Jira(s) assigned</option>
    <!-- Add your existing options here -->
  </select>
</div>

<style>
.searchable-select-wrapper {
  position: relative;
  width: 300px; /* Adjust as needed */
  margin: 20px 0;
}

.form-select {
  width: 100%;
  padding: 10px;
  border: 2px solid #e0e0e0;
  border-radius: 8px;
  font-size: 16px;
  background: #fff;
  box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  position: relative;
  cursor: pointer;
}

.form-select:focus {
  border-color: #007bff;
  outline: none;
  box-shadow: 0 2px 10px rgba(0,123,255,0.2);
}

/* Style for the search input we'll add via JS */
.searchable-select-wrapper .search-input {
  width: calc(100% - 24px);
  padding: 8px;
  margin: 5px 10px;
  border: 1px solid #e0e0e0;
  border-radius: 4px;
  font-size: 14px;
  position: sticky;
  top: 0;
  background: #fff;
  z-index: 1;
}

.form-select option {
  padding: 8px 15px;
  cursor: pointer;
  transition: background 0.2s ease;
}

.form-select option:hover {
  background: #f0f7ff;
  color: #007bff;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const select = document.getElementById('jiraAssignedFilterOpen');
  const wrapper = document.querySelector('.searchable-select-wrapper');
  
  // Create search input
  const searchInput = document.createElement('input');
  searchInput.type = 'text';
  searchInput.className = 'search-input';
  searchInput.placeholder = 'Search...';
  
  // Insert search input at the top of the select
  select.insertAdjacentElement('afterbegin', searchInput);
  
  // Add event listener for filtering
  searchInput.addEventListener('input', function(e) {
    const filter = e.target.value.toLowerCase();
    const options = select.getElementsByTagName('option');
    
    for (let i = 0; i < options.length; i++) {
      const text = options[i].textContent || options[i].innerText;
      if (text.toLowerCase().indexOf(filter) > -1) {
        options[i].style.display = '';
      } else {
        options[i].style.display = 'none';
      }
    }
  });
  
  // Prevent select from closing when clicking search input
  searchInput.addEventListener('click', (e) => {
    e.stopPropagation();
  });
  
  // Make select tall enough to show options
  select.size = 10; // Adjust this number based on how many options you want visible
});
</script>